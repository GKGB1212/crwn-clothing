{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; //Firebase config\n\nconst config = {\n  apiKey: \"AIzaSyCEfQ5Y8iFjwDGfnxyRMNXrMTLx666nHtk\",\n  authDomain: \"crwn-db-7a63c.firebaseapp.com\",\n  projectId: \"crwn-db-7a63c\",\n  storageBucket: \"crwn-db-7a63c.appspot.com\",\n  messagingSenderId: \"1013973426994\",\n  appId: \"1:1013973426994:web:ce59a4ed75a535d0c42d2b\",\n  measurementId: \"G-NWDVQBLQCE\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  config.log(snapShot); //kiểm tra với id này thì người dùng đã tồn tại trong collection users chưa, nếu chưa thì thêm vào\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (err) {\n      config.log('error creating user ' + err.message);\n    }\n  }\n\n  return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["F:/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","log","exists","displayName","email","createAt","Date","set","err","message","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP,C,CAEA;;AACA,MAAMC,MAAM,GAAC;AACTC,EAAAA,MAAM,EAAE,yCADC;AAETC,EAAAA,UAAU,EAAE,+BAFH;AAGTC,EAAAA,SAAS,EAAE,eAHF;AAITC,EAAAA,aAAa,EAAE,2BAJN;AAKTC,EAAAA,iBAAiB,EAAE,eALV;AAMTC,EAAAA,KAAK,EAAE,4CANE;AAOTC,EAAAA,aAAa,EAAE;AAPN,CAAb;AAUAR,QAAQ,CAACS,aAAT,CAAuBR,MAAvB;AAEA,OAAO,MAAMS,yBAAyB,GAAE,OAAOC,QAAP,EAAiBC,cAAjB,KAAkC;AACtE,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAd;AAEA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;AAEAjB,EAAAA,MAAM,CAACkB,GAAP,CAAWF,QAAX,EAPsE,CAStE;;AACA,MAAG,CAACA,QAAQ,CAACG,MAAb,EAAoB;AAChB,UAAM;AAACC,MAAAA,WAAD;AAAaC,MAAAA;AAAb,QAAoBX,QAA1B;AACA,UAAMY,QAAQ,GAAC,IAAIC,IAAJ,EAAf;;AACA,QAAG;AACC,YAAMX,OAAO,CAACY,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,QAHc;AAId,WAAGX;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOC,OAAMc,GAAN,EAAU;AACPzB,MAAAA,MAAM,CAACkB,GAAP,CAAW,yBAAwBO,GAAG,CAACC,OAAvC;AACH;AACJ;;AAED,SAAOd,OAAP;AACH,CA1BM;AA4BP,OAAO,MAAMe,IAAI,GAAC5B,QAAQ,CAAC4B,IAAT,EAAX;AACP,OAAO,MAAMd,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,MAAMe,QAAQ,GAAC,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAKL,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA5B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n//Firebase config\r\nconst config={\r\n    apiKey: \"AIzaSyCEfQ5Y8iFjwDGfnxyRMNXrMTLx666nHtk\",\r\n    authDomain: \"crwn-db-7a63c.firebaseapp.com\",\r\n    projectId: \"crwn-db-7a63c\",\r\n    storageBucket: \"crwn-db-7a63c.appspot.com\",\r\n    messagingSenderId: \"1013973426994\",\r\n    appId: \"1:1013973426994:web:ce59a4ed75a535d0c42d2b\",\r\n    measurementId: \"G-NWDVQBLQCE\"\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument= async (userAuth, additionalData)=>{\r\n    if(!userAuth) return;\r\n\r\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\r\n\r\n    const snapShot=await userRef.get();\r\n\r\n    config.log(snapShot);\r\n\r\n    //kiểm tra với id này thì người dùng đã tồn tại trong collection users chưa, nếu chưa thì thêm vào\r\n    if(!snapShot.exists){\r\n        const {displayName,email}=userAuth;\r\n        const createAt=new Date();\r\n        try{\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createAt,\r\n                ...additionalData\r\n            })\r\n        }catch(err){\r\n            config.log('error creating user '+ err.message);\r\n        }\r\n    }\r\n\r\n    return userRef;\r\n}\r\n\r\nexport const auth=firebase.auth();\r\nexport const firestore=firebase.firestore();\r\n\r\nconst provider=new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithGoogle=()=> auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}